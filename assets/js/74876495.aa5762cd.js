"use strict";(self.webpackChunkoura_node_editor=self.webpackChunkoura_node_editor||[]).push([[505],{4724:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var t=o(2540),a=o(8453);const s={sidebar_position:2},i="Quickstart",r={id:"quickstart",title:"Quickstart",description:"Install the package",source:"@site/docs/quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/oura-node-editor/docs/quickstart",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/oura-node-editor/docs/introduction"}},d={},c=[{value:"Install the package",id:"install-the-package",level:2},{value:"Basic component",id:"basic-component",level:2},{value:"Node editor logic",id:"node-editor-logic",level:2},{value:"Change theme",id:"change-theme",level:2},{value:"More complex use cases",id:"more-complex-use-cases",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,t.jsx)(n.h2,{id:"install-the-package",children:"Install the package"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install oura-node-editor\n"})}),"\n",(0,t.jsx)(n.h2,{id:"basic-component",children:"Basic component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { NodeEditor, PinLayout, useNodeEditor } from "oura-node-editor";\nimport { useEffect } from "react";\n\nfunction BasicNodeEditorDisplayer() {\n  const {\n    nodes,\n    links,\n    panZoomInfo,\n    selectedItems,\n    setNodes,\n    onNodeMove,\n    setPanZoomInfo,\n    setSelectedItems,\n    onConnectorUpdate,\n  } = useNodeEditor();\n\n  useEffect(() => {\n    setNodes({\n      addition: {\n        name: "addition",\n        position: { x: 100, y: 100 },\n        width: 100,\n        connectors: {\n          result: {\n            name: "result",\n            pinLayout: PinLayout.RIGHT_PIN,\n            contentType: "none",\n            data: {},\n          },\n          a: {\n            name: "a",\n            pinLayout: PinLayout.NO_PINS,\n            contentType: "number",\n            data: { value: 0 },\n          },\n          b: {\n            name: "b",\n            pinLayout: PinLayout.NO_PINS,\n            contentType: "number",\n            data: { value: 10 },\n          },\n        },\n      },\n    });\n  }, [setNodes]);\n\n  return (\n    <NodeEditor\n      panZoomInfo={panZoomInfo}\n      nodes={nodes}\n      links={links}\n      onConnectorUpdate={onConnectorUpdate}\n      selectedItems={selectedItems}\n      onPanZoomInfo={setPanZoomInfo}\n      onSelectedItems={setSelectedItems}\n      onNodeMove={onNodeMove}\n    />\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"node-editor-logic",children:"Node editor logic"}),"\n",(0,t.jsxs)(n.p,{children:["As today, oura-node-editor focus on the UI side and is just in charge to display node editors.\nThe logic of computation / functional behaviour has to be written and can be complex.\nLater in the project, this may be implemented and given to the easelly user.\nThe project ",(0,t.jsx)(n.a,{href:"https://github.com/mathieuguyot/oura-canvas-creator",children:"oura-canvas-creator"})," gives a complex example of a node/edge propagation algorithm (even with reusable node and edges functions blocs). The logic is located in ",(0,t.jsx)(n.a,{href:"https://github.com/mathieuguyot/oura-canvas-creator/blob/main/src/nodes/node.ts",children:"node.ts file"})," and propagateAll or propagateNode functions (Warning, this is experimental and can contains bugs)."]}),"\n",(0,t.jsx)(n.h2,{id:"change-theme",children:"Change theme"}),"\n",(0,t.jsxs)(n.p,{children:["oura-node-editor uses ",(0,t.jsx)(n.a,{href:"https://daisyui.com/",children:"DaisyUI"}),". To consult themes provided by daisyUI, go ",(0,t.jsx)(n.a,{href:"https://daisyui.com/docs/themes/",children:"here"}),".\nAs stated in documentation, on your index.html file, add data-theme attribute to html tag  to set the theme you wish to use."]}),"\n",(0,t.jsx)(n.h2,{id:"more-complex-use-cases",children:"More complex use cases"}),"\n",(0,t.jsxs)(n.p,{children:["The project ",(0,t.jsx)(n.a,{href:"https://github.com/mathieuguyot/oura-canvas-creator",children:"oura-canvas-creator"})," was created mainly to test all features provided by oura-node-editor.\nDo not hesitate to look at how the project is made. In particular, the project allow to user to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"create and remove nodes"}),"\n",(0,t.jsx)(n.li,{children:"create edges"}),"\n",(0,t.jsx)(n.li,{children:"implement connectors to be reused in nodes (canvas, 3d view)"}),"\n",(0,t.jsx)(n.li,{children:"implement node logic as expained above"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);